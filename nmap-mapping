import subprocess
import openpyxl
import re
import time
import concurrent.futures

def extract_service(output):
    service_match = re.search(r'(\d+/tcp)\s+(\S+)\s+([a-zA-Z0-9?]+)', output)
    if service_match:
        port = service_match.group(1)
        state = service_match.group(2)  # Capture the state
        service = service_match.group(3)  # Capture the service name
        return port, service, state
    return "", "", ""

def is_port_reachable(ip, port):
    command = f'nmap -sV -Pn -n -p {port} {ip}'
    print(f"Running command: {command}")
    start_time = time.time()
    result = subprocess.run(command, shell=True, capture_output=True, text=True)
    end_time = time.time()
    time_taken = end_time - start_time
    output = result.stdout.lower()
    return "open" in output, output, time_taken

def update_availability_excel(excel_file_path, batch_size=5):
    workbook = openpyxl.load_workbook(excel_file_path)
    sheet = workbook.active

    # Read the headers from the first row to determine indices
    headers = next(sheet.iter_rows(min_row=1, max_row=1, values_only=True))
    ip_column_index = headers.index('IP')
    port_column_index = headers.index('Port')
    service_column_index = headers.index('Service') + 1  # Excel is 1-indexed
    availability_column_index = headers.index('Availability') + 1
    time_required_column_index = headers.index('Time-Required') + 1

    with concurrent.futures.ThreadPoolExecutor(max_workers=batch_size) as executor:
        futures_to_row_index = {}
        for row_index, row in enumerate(sheet.iter_rows(min_row=2, max_row=sheet.max_row, values_only=True), start=2):
            ip = row[ip_column_index]
            port = row[port_column_index]
            if ip and port:  # Check if IP and port cells are not empty
                future = executor.submit(is_port_reachable, ip, port)
                futures_to_row_index[future] = (row_index, ip, port)

        for future in concurrent.futures.as_completed(futures_to_row_index):
            row_index, ip, port = futures_to_row_index[future]
            try:
                reachable, nmap_output, time_taken = future.result()
                port, service, state = extract_service(nmap_output)
                # Directly use the extracted state for the 'Availability' field
                sheet.cell(row=row_index, column=availability_column_index, value=state)
                sheet.cell(row=row_index, column=service_column_index, value=service)
                sheet.cell(row=row_index, column=time_required_column_index, value=time_taken)
            except Exception as e:
                print(f"An error occurred while processing IP {ip}, Port {port}: {e}")

    workbook.save(excel_file_path)
    print("Excel sheet updated with Availability, Service, and Time-Required.")

if __name__ == "__main__":
    excel_file_path = "/home/asrivastava147/testscripts/process-related/finals/gold_tracker.xlsx"
    update_availability_excel(excel_file_path)
